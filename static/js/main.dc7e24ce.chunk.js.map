{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Layout.js","components/Hello/Hello.js","components/Auth/Authentification.js","components/Registration/Registration.js","components/SendMessage/SendMessage.js","components/DownButton/DownButton.js","components/ChatWindow/ChatWindow.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","react_router_dom","to","exact","onClick","closeConnection","log","event","target","blur","Footer","Layout","Fragment","components_Header_Header","children","components_Footer_Footer","Hello","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","loggedIn","react_router","React","Component","Authentification","_this","handleUpdateLogin","setState","loginValue","value","handleUpdatePassword","passwordValue","ctrlForm","preventDefault","state","_this2","_this$props","logIn","onSubmit","htmlFor","id","type","onChange","loginPassword","Registration","SendMessage","sendValue","sendMessage","textArea","trim","handleInputValue","cols","rows","ref","elem","DownButton","handleScroll","fullScrollTop","scrollHeight","clientHeight","scrollTop","scrollDown","messagesWindow","scrollTo","top","behavior","prevProps","prevState","snapshot","addEventListener","ChatWindow","data","node","map","item","index","key","from","message","concat","Date","time","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","components_DownButton_DownButton","components_SendMessage_SendMessage","App","downloadLocalStorage","activeUser","localStorage","getItem","storageState","JSON","parse","openConnection","setSoketHandlers","soket","WebSocket","e","alert","onopen","handleOpenConnection","onclose","handleCloseConnection","onmessage","handleData","onerror","soketError","assign","close","clear","inputData","length","sortedData","sortInputData","toConsumableArray","filter","sort","b","send","stringify","inputValue","setTimeout","user","window","setItem","_this3","components_Layout","path","render","components_Auth_Authentification","component","components_ChatWindow_ChatWindow","components_Hello_Hello","Boolean","location","hostname","match","app","src_components_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc7e24ce.chunk.js","sourcesContent":["import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\n/*const links = [\r\n  {to: '/', label: 'Home', exact: 'true'},\r\n  {to: 'auth', label: 'Auth', exact: false},\r\n  {to: 'registration', label: 'Registration', exact: false},\r\n];*/\r\n\r\nconst Header = (props) => (\r\n  <header className='header'>\r\n    <Link\r\n      to={'/'}\r\n      exact='true'\r\n      className='header-link'\r\n    >\r\n      <h1>Chat-RSS</h1>\r\n    </Link>\r\n    <div>\r\n      <Link\r\n        to={'/auth'}\r\n        exact='false'\r\n        className='header-button-link'\r\n      >\r\n        <button onClick={props.closeConnection} className='header-button'>{props.log}</button>\r\n      </Link>\r\n      <Link\r\n        to={'/registration'}\r\n        exact='false'\r\n        className='header-button-link'\r\n      >\r\n        <button onClick={(event) => event.target.blur()} className='header-button'>Registration</button>\r\n      </Link>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n  <footer className='footer'>created by Evgeniy Yakimchuk</footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport Header from './Header/Header';\r\nimport Footer from './Footer/Footer';\r\n\r\nconst Layout = (props) => (\r\n  <>\r\n    <Header log={props.log} closeConnection={props.closeConnection}/>\r\n    {props.children}\r\n    <Footer/>\r\n  </>\r\n);\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Hello.css';\r\n\r\n/*const Hello = () => {\r\n  return <main>Hello</main>\r\n};*/\r\n\r\nclass Hello extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    console.log('Hello mounted');\r\n  }\r\n\r\n  render() {\r\n    const {loggedIn} = this.props;\r\n    \r\n    if (loggedIn) {\r\n      return <Redirect to='/chat-window'/>;\r\n    }\r\n    \r\n    return (\r\n      <main className='main'>\r\n        <h2>Welcome to RSS-Chat</h2>\r\n        <p>\r\n          You can go to registration or the login form.\r\n        </p>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hello;","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport './Authentification.css';\r\n\r\n\r\nclass Authentification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loginValue: '',\r\n      passwordValue: '',\r\n    };\r\n  }\r\n\r\n  handleUpdateLogin = (event) => {\r\n    this.setState({loginValue: event.target.value});\r\n  }\r\n\r\n  handleUpdatePassword = (event) => {\r\n    this.setState({passwordValue: event.target.value});\r\n  }\r\n\r\n  ctrlForm = (event) => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const {logIn, loggedIn} = this.props;\r\n    \r\n    if (loggedIn) {\r\n      return <Redirect to='/chat-window'/>;\r\n    }\r\n    \r\n    return (\r\n      <main className='main'>\r\n        <h2 className='auth-header'>Authentification</h2>\r\n        <p className='auth-text'>This is test authentification page! You don't need to enter login and password.</p>\r\n        <form className='auth-form' onSubmit={this.ctrlForm}>\r\n          <label className='input' htmlFor=\"login\">\r\n            Login:\r\n            <input id='login' type=\"text\" className='input-field' value={this.state.loginValue} onChange={this.handleUpdateLogin}/>\r\n          </label>\r\n          <label className='input' htmlFor=\"password\">\r\n            Password:\r\n            <input id='password' type=\"password\" className='input-field' value={this.state.loginPassword} onChange={this.handleUpdatePassword}/>\r\n          </label>\r\n          <Link to='/chat-window' exact='false' className='auth-button'>\r\n            <button className='auth-btn' onClick={() => logIn(this.state.loginValue, this.state.passwordValue)}>Entry</button>\r\n          </Link>\r\n        </form>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Authentification;","import React from 'react';\r\n\r\nconst Registration = () => (\r\n  <main className='main'>\r\n    <h2>Registration</h2>\r\n  </main>\r\n);\r\n\r\nexport default Registration;","import React, { Component } from 'react';\r\n\r\nimport './SendMessage.css';\r\n\r\n/*const SendMessage = ({handleInputValue, sendMessage}) => (\r\n  <div className='send-message'>\r\n    <textarea className='send-message-field' name=\"\" id=\"\" cols=\"30\" rows=\"10\"  onChange={(e) => handleInputValue(e)}></textarea>\r\n    <button onClick={sendMessage} className='send-message-button'>Send</button>\r\n  </div>\r\n);*/\r\n\r\nclass SendMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  sendValue = (event) => {\r\n    event.target.blur();\r\n    const {sendMessage} = this.props;\r\n\r\n    if (!this.textArea.value.trim()) {\r\n      this.textArea.value = '';\r\n      return;\r\n    }\r\n    \r\n    sendMessage();\r\n    this.textArea.value = '';\r\n  }\r\n  \r\n  render() {\r\n    const {handleInputValue} = this.props;\r\n    \r\n    return (\r\n      <div className='send-message'>\r\n        <textarea\r\n          className='send-message-field'\r\n          id=\"messageField\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          onChange={handleInputValue}\r\n          ref={(elem) => this.textArea = elem}\r\n        ></textarea>\r\n        <button onClick={this.sendValue} className='send-message-button'>Send</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendMessage;","import React, { Component } from 'react';\r\n\r\nimport './DownButton.css';\r\n\r\n/*const DownButton = (props) => (\r\n  <div className='button-down'>\r\n    <i className=\"fas fa-level-down-alt\"></i>\r\n  </div>\r\n);*/\r\n\r\nclass DownButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      className: 'button-down'\r\n    }\r\n    //this.className = 'button-down';\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    this.props.messagesWindow.addEventListener('scroll', this.handleScroll);\r\n  }\r\n  \r\n  handleScroll = (event) => {\r\n    const elem = event.target;\r\n    const fullScrollTop = elem.scrollHeight - elem.clientHeight;\r\n    if (elem.scrollTop < fullScrollTop) {\r\n      this.setState({className: 'button-down button-down-show'});\r\n    } else {\r\n      this.setState({className: 'button-down'});\r\n    }\r\n  }\r\n  \r\n  scrollDown = () => {\r\n    this.props.messagesWindow.scrollTo({\r\n      top: this.props.messagesWindow.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={this.state.className} onClick={this.scrollDown}>\r\n        <i className=\"fas fa-level-down-alt\"></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownButton;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './ChatWindow.css';\r\nimport SendMessage from \"../SendMessage/SendMessage\";\r\n\r\nimport DownButton from \"../DownButton/DownButton\";\r\n\r\n\r\nclass ChatWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.elem = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.scrollDown(this.elem);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    this.props.scrollDown(this.elem);\r\n  }\r\n\r\n  render() {\r\n    const {loggedIn, data, sendMessage, handleInputValue} = this.props;\r\n    \r\n    if (loggedIn === false) {\r\n      return <Redirect to='/auth'/>;\r\n    }\r\n    \r\n    return (\r\n      <main>\r\n        Chat Window\r\n        <div className='main-content-messages' ref={(node) => this.elem = node}>\r\n          {data.map((item, index) => (\r\n            <div className='message-card' key={index}>\r\n              <h3 className='message-card-name'>Name: {item.from}</h3>\r\n              <p className='message-card-text'>{item.message}</p>\r\n              <div className='message-date'>\r\n                <p>{`Time: ${new Date(item.time).getHours()}:${new Date(item.time).getMinutes()}:${new Date(item.time).getSeconds()}`}</p>\r\n                <p>{`Date: ${new Date(item.time).getDate()}.${new Date(item.time).getMonth() + 1}.${new Date(item.time).getFullYear()}`}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <DownButton messagesWindow={this.elem}/>\r\n        </div>\r\n        <SendMessage sendMessage={sendMessage} handleInputValue={handleInputValue}/>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatWindow;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Layout from \"./Layout\";\r\nimport Hello from \"./Hello/Hello\";\r\nimport Auth from \"./Auth/Authentification\";\r\nimport Registration from \"./Registration/Registration\";\r\nimport ChatWindow from \"./ChatWindow/ChatWindow\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.soket = new WebSocket('ws://st-chat.shas.tel');\r\n    this.soket = null;\r\n    \r\n    // this.openConnection();\r\n\r\n    this.state = {\r\n      user: '',\r\n      loggedIn: false,\r\n      log: 'Log In',\r\n      data: [/*{\r\n        from: 'me',\r\n        message: 'bla',\r\n      }*/],\r\n      inputValue: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.downloadLocalStorage();\r\n    \r\n    window.addEventListener('unload', () => {\r\n      if (this.state.loggedIn) {\r\n        localStorage.setItem('activeUser', this.state.user);\r\n        localStorage.setItem(this.state.user, JSON.stringify(this.state));\r\n      }\r\n    });\r\n  }\r\n  \r\n  /*\r\n  sort in stage of download data\r\n   */\r\n  \r\n  downloadLocalStorage = () => {\r\n    const activeUser = localStorage.getItem('activeUser');\r\n    \r\n    if (activeUser) {\r\n      const storageState = JSON.parse(localStorage.getItem(activeUser));\r\n      \r\n      this.setState(storageState);\r\n      \r\n      this.openConnection();\r\n      this.setSoketHandlers();\r\n      \r\n    } else {\r\n      console.log('localstorage is empty');\r\n    }\r\n  }\r\n  \r\n  openConnection = () => {\r\n    try {\r\n      this.soket = new WebSocket('ws://st-chat.shas.tel');\r\n    } catch (e) {\r\n      alert('chat uses the websocket connection that is not used this hosting');\r\n      console.log('Error', e);\r\n    }\r\n  }\r\n  \r\n  setSoketHandlers = () => {\r\n    this.soket.onopen = this.handleOpenConnection;\r\n    this.soket.onclose = this.handleCloseConnection;\r\n    this.soket.onmessage = this.handleData;\r\n    this.soket.onerror = this.soketError;\r\n  }\r\n\r\n  handleOpenConnection = () => {\r\n    console.log('open connection');\r\n  }\r\n\r\n  handleCloseConnection = (event) => {\r\n    this.setState( Object.assign({}, this.state, {data: []}) );\r\n  }\r\n\r\n  // save users data in localeStorage\r\n  closeConnection = (event) => {\r\n    event.target.blur();\r\n    if (this.state.loggedIn === true) {\r\n      this.setState(Object.assign({}, this.state, {loggedIn: false, log: 'Log In'}));\r\n      this.soket.close();\r\n      localStorage.clear();\r\n    }\r\n  }\r\n  \r\n  handleData = (event) => {\r\n    const inputData = JSON.parse(event.data);\r\n    \r\n    if (inputData.length > 1) {\r\n      const sortedData = this.sortInputData(inputData);\r\n      this.setState(Object.assign({}, this.state, {data: [...this.state.data, ...sortedData]}));\r\n    } else {\r\n      this.setState(Object.assign({}, this.state, {data: [...this.state.data, ...JSON.parse(event.data)]}));\r\n    }\r\n  }\r\n  \r\n  sortInputData = (data) => {\r\n    const sortedData = data.filter((item) => {\r\n      if (!this.state.data.length) {\r\n        return false;\r\n      }\r\n      if (item.time > this.state.data[this.state.data.length - 1].time) {\r\n        return true;\r\n      }\r\n    });\r\n    \r\n    if (sortedData.length) {\r\n      return sortedData.sort((a, b) => a.time - b.time);\r\n    } else {\r\n      return data.sort((a, b) => a.time - b.time);\r\n    }\r\n  }\r\n  \r\n  soketError = () => {\r\n    console.log('error in connection');\r\n  }\r\n\r\n  sendMessage = () => {\r\n    this.soket.send(JSON.stringify({\r\n      from: 'Test-User',\r\n      message: this.state.inputValue,\r\n    }));\r\n  }\r\n\r\n  handleInputValue = (event) => {\r\n    this.setState(Object.assign({}, this.state, {inputValue: event.target.value}));\r\n  }\r\n\r\n  logIn = (loginValue, passwordValue) => {\r\n    if (loginValue === '' && passwordValue === '') {\r\n      this.openConnection();\r\n      this.setSoketHandlers();\r\n      \r\n      setTimeout(() => {\r\n        this.setState(Object.assign({}, this.state, {user: 'Evgen'}));\r\n      }, 0);\r\n      \r\n      \r\n      if (this.state.loggedIn === false) {\r\n        this.setState(Object.assign({}, this.state, {loggedIn: true, log: 'Log Out'}));\r\n      }\r\n      \r\n    } else {\r\n      console.log('error');\r\n    }\r\n  }\r\n\r\n  scrollDown = (elem) => {\r\n    if (!elem) return;\r\n    elem.scrollTo(0, elem.scrollHeight);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Layout log={this.state.log} closeConnection={this.closeConnection}>\r\n          <Switch>\r\n            <Route path='/auth' render={() => <Auth loggedIn={this.state.loggedIn} logIn={this.logIn}/>} />\r\n            <Route path='/registration' component={Registration} />\r\n            <Route path='/chat-window' render={() => <ChatWindow scrollDown={this.scrollDown} data={this.state.data} sendMessage={this.sendMessage} loggedIn={this.state.loggedIn} handleInputValue={this.handleInputValue}/>} />\r\n            <Route path='/' component={() => <Hello loggedIn={this.state.loggedIn}/>} />\r\n          </Switch>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}